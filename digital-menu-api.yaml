openapi: 3.0.1
info:
  title: Digital Menu Api
  version: v1
paths:
  /api/account-roles:
    get:
      tags:
        - AccountRoles
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccountRoleReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRoleReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountRoleReadDtoPagingResponseDto'
    post:
      tags:
        - AccountRoles
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccountRoleCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRoleCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountRoleCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountRoleCreateDto'
      responses:
        '200':
          description: Success
  '/api/account-roles/{id}':
    get:
      tags:
        - AccountRoles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccountRoleReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRoleReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountRoleReadDto'
    put:
      tags:
        - AccountRoles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccountRoleUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRoleUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountRoleUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountRoleUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - AccountRoles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - AccountRoles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  /api/accounts:
    get:
      tags:
        - Accounts
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccountReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountReadDtoPagingResponseDto'
    post:
      tags:
        - Accounts
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccountCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountCreateDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccountReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountReadDto'
  '/api/accounts/{id}':
    get:
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccountReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountReadDto'
    put:
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccountUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  /api/authentication:
    post:
      tags:
        - Authentication
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AuthenticationPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthenticationPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthenticationPostDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthenticationReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticationReadDto'
  /api/boxes:
    get:
      tags:
        - Boxes
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BoxReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/BoxReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/BoxReadDtoPagingResponseDto'
    post:
      tags:
        - Boxes
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BoxCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BoxCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BoxCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BoxCreateDto'
      responses:
        '200':
          description: Success
  '/api/boxes/{id}':
    get:
      tags:
        - Boxes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BoxReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/BoxReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/BoxReadDto'
    put:
      tags:
        - Boxes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BoxUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BoxUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BoxUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BoxUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Boxes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Boxes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  /api/box-types:
    get:
      tags:
        - BoxTypes
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BoxTypeReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/BoxTypeReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/BoxTypeReadDtoPagingResponseDto'
    post:
      tags:
        - BoxTypes
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BoxTypeCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BoxTypeCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BoxTypeCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BoxTypeCreateDto'
      responses:
        '200':
          description: Success
  '/api/box-types/{id}':
    get:
      tags:
        - BoxTypes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BoxTypeReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/BoxTypeReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/BoxTypeReadDto'
    put:
      tags:
        - BoxTypes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BoxTypeUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BoxTypeUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BoxTypeUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BoxTypeUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - BoxTypes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - BoxTypes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  /api/image:
    post:
      tags:
        - Image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  nullable: true
            encoding:
              image:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/product-lists-products:
    get:
      tags:
        - ProductListProducts
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductListProductReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListProductReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductListProductReadDtoPagingResponseDto'
    post:
      tags:
        - ProductListProducts
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductListProductCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListProductCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListProductCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListProductCreateDto'
      responses:
        '200':
          description: Success
  '/api/product-lists-products/{id}':
    get:
      tags:
        - ProductListProducts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductListProductReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListProductReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductListProductReadDto'
    put:
      tags:
        - ProductListProducts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductListProductUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListProductUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListProductUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListProductUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ProductListProducts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - ProductListProducts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  /api/product-lists:
    get:
      tags:
        - ProductLists
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductListReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductListReadDtoPagingResponseDto'
    post:
      tags:
        - ProductLists
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductListCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListCreateDto'
      responses:
        '200':
          description: Success
  '/api/product-lists/{id}':
    get:
      tags:
        - ProductLists
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductListReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductListReadDto'
    put:
      tags:
        - ProductLists
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductListUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ProductLists
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - ProductLists
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  /api/products:
    get:
      tags:
        - Products
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductReadDtoPagingResponseDto'
    post:
      tags:
        - Products
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCreateDto'
      responses:
        '200':
          description: Success
  '/api/products/{id}':
    get:
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductReadDto'
    put:
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  /api/screens:
    get:
      tags:
        - Screens
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ScreenReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ScreenReadDtoPagingResponseDto'
    post:
      tags:
        - Screens
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ScreenCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ScreenCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScreenCreateDto'
      responses:
        '200':
          description: Success
  '/api/screens/{id}':
    get:
      tags:
        - Screens
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ScreenReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ScreenReadDto'
    put:
      tags:
        - Screens
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ScreenUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ScreenUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScreenUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Screens
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Screens
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  '/api/screens/udid/{udid}':
    get:
      tags:
        - Screens
      parameters:
        - name: udid
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ScreenReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ScreenReadDto'
  /api/screen-templates:
    get:
      tags:
        - ScreenTemplates
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ScreenTemplateReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenTemplateReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ScreenTemplateReadDtoPagingResponseDto'
    post:
      tags:
        - ScreenTemplates
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ScreenTemplateCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenTemplateCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ScreenTemplateCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScreenTemplateCreateDto'
      responses:
        '200':
          description: Success
  '/api/screen-templates/{id}':
    get:
      tags:
        - ScreenTemplates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ScreenTemplateReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenTemplateReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ScreenTemplateReadDto'
    put:
      tags:
        - ScreenTemplates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ScreenTemplateUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenTemplateUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ScreenTemplateUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScreenTemplateUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ScreenTemplates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - ScreenTemplates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  /api/stores:
    get:
      tags:
        - Stores
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StoreReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StoreReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StoreReadDtoPagingResponseDto'
    post:
      tags:
        - Stores
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StoreCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/StoreCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/StoreCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StoreCreateDto'
      responses:
        '200':
          description: Success
  '/api/stores/{id}':
    get:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StoreReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StoreReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StoreReadDto'
    put:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StoreUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/StoreUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/StoreUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StoreUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  '/api/stores/{id}/products':
    get:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductReadDtoPagingResponseDto'
  '/api/stores/{storeId}/products/batch-price':
    put:
      tags:
        - Stores
      parameters:
        - name: storeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductUpdatePriceDto'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductUpdatePriceDto'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductUpdatePriceDto'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductUpdatePriceDto'
              nullable: true
      responses:
        '200':
          description: Success
  '/api/stores/{id}/accounts':
    get:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccountReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountReadDtoPagingResponseDto'
  '/api/stores/{id}/templates':
    get:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: tag
          in: query
          schema:
            type: string
            default: ''
            nullable: true
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateReadDtoPagingResponseDto'
  '/api/stores/{id}/screens':
    get:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ScreenReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ScreenReadDtoPagingResponseDto'
  /api/templates:
    get:
      tags:
        - Templates
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: tag
          in: query
          schema:
            type: string
            default: ''
            nullable: true
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateReadDtoPagingResponseDto'
    post:
      tags:
        - Templates
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  nullable: true
                templateDtoJson:
                  type: string
                  nullable: true
            encoding:
              file:
                style: form
              templateDtoJson:
                style: form
      responses:
        '200':
          description: Success
  /api/templates/sample:
    get:
      tags:
        - Templates
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: tag
          in: query
          schema:
            type: string
            default: ''
            nullable: true
        - name: searchValue
          in: query
          schema:
            type: string
            default: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateReadDtoPagingResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateReadDtoPagingResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateReadDtoPagingResponseDto'
  '/api/templates/{id}':
    get:
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateDetailReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateDetailReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateDetailReadDto'
    put:
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TemplateUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              nullable: true
      responses:
        '200':
          description: Success
  '/api/templates/udid/{udid}':
    get:
      tags:
        - Templates
      parameters:
        - name: udid
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateDetailReadDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateDetailReadDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateDetailReadDto'
  '/{sample-template-id}/storetemplate':
    post:
      tags:
        - Templates
      parameters:
        - name: sample-template-id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TemplateCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TemplateCreateDto'
      responses:
        '200':
          description: Success
components:
  schemas:
    AccountRoleReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    AccountRoleReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/AccountRoleReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    AccountRoleCreateDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    AccountRoleUpdateDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    OperationType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    Operation:
      type: object
      properties:
        operationType:
          $ref: '#/components/schemas/OperationType'
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    AccountReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
        storeName:
          type: string
          nullable: true
        roleId:
          type: integer
          format: int32
        roleName:
          type: string
          nullable: true
      additionalProperties: false
    AccountReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/AccountReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    AccountCreateDto:
      type: object
      properties:
        username:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
          nullable: true
        roleId:
          type: integer
          format: int32
        password:
          type: string
          nullable: true
        salt:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    AccountUpdateDto:
      type: object
      properties:
        storeId:
          type: integer
          format: int32
          nullable: true
        roleId:
          type: integer
          format: int32
      additionalProperties: false
    AuthenticationPostDto:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      additionalProperties: false
    AccountReadAfterAuthenDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
        storeName:
          type: string
          nullable: true
        roleId:
          type: integer
          format: int32
        roleName:
          type: string
          nullable: true
      additionalProperties: false
    AuthenticationReadDto:
      type: object
      properties:
        token:
          type: string
          nullable: true
        account:
          $ref: '#/components/schemas/AccountReadAfterAuthenDto'
      additionalProperties: false
    BoxReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        templateId:
          type: integer
          format: int32
        location:
          type: integer
          format: int32
          nullable: true
        boxTypeId:
          type: integer
          format: int32
          nullable: true
        src:
          type: string
          nullable: true
        headerTitle:
          type: string
          nullable: true
        footerTitle:
          type: string
          nullable: true
        headerSrc:
          type: string
          nullable: true
        footerSrc:
          type: string
          nullable: true
      additionalProperties: false
    BoxReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/BoxReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    BoxCreateDto:
      type: object
      properties:
        templateId:
          type: integer
          format: int32
        location:
          type: integer
          format: int32
          nullable: true
        boxTypeId:
          type: integer
          format: int32
          nullable: true
        src:
          type: string
          nullable: true
        headerTitle:
          type: string
          nullable: true
        footerTitle:
          type: string
          nullable: true
        headerSrc:
          type: string
          nullable: true
        footerSrc:
          type: string
          nullable: true
      additionalProperties: false
    BoxUpdateDto:
      type: object
      properties:
        templateId:
          type: integer
          format: int32
        location:
          type: integer
          format: int32
          nullable: true
        boxTypeId:
          type: integer
          format: int32
          nullable: true
        src:
          type: string
          nullable: true
        headerTitle:
          type: string
          nullable: true
        footerTitle:
          type: string
          nullable: true
        headerSrc:
          type: string
          nullable: true
        footerSrc:
          type: string
          nullable: true
      additionalProperties: false
    BoxTypeReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    BoxTypeReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/BoxTypeReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    BoxTypeCreateDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    BoxTypeUpdateDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    ProductListProductReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productListId:
          type: integer
          format: int32
          nullable: true
        productId:
          type: integer
          format: int32
          nullable: true
        location:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductListProductReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductListProductReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    ProductListProductCreateDto:
      type: object
      properties:
        productListId:
          type: integer
          format: int32
          nullable: true
        productId:
          type: integer
          format: int32
          nullable: true
        location:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductListProductUpdateDto:
      type: object
      properties:
        productListId:
          type: integer
          format: int32
          nullable: true
        productId:
          type: integer
          format: int32
          nullable: true
        location:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductListReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        boxId:
          type: integer
          format: int32
          nullable: true
        maxSize:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductListReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductListReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    ProductListCreateDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        maxSize:
          type: integer
          format: int32
          nullable: true
        location:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductListUpdateDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        boxId:
          type: integer
          format: int32
          nullable: true
        maxSize:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
        src:
          type: string
          nullable: true
        storeName:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
      additionalProperties: false
    ProductReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    ProductCreateDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
        src:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductUpdateDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
        src:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ScreenReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        storeId:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
      additionalProperties: false
    ScreenReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ScreenReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    ScreenCreateDto:
      type: object
      properties:
        storeId:
          type: integer
          format: int32
        udid:
          type: string
          nullable: true
      additionalProperties: false
    ScreenUpdateDto:
      type: object
      properties:
        storeId:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
      additionalProperties: false
    ScreenTemplateReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        screenId:
          type: integer
          format: int32
        templateId:
          type: integer
          format: int32
      additionalProperties: false
    ScreenTemplateReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ScreenTemplateReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    ScreenTemplateCreateDto:
      type: object
      properties:
        screenId:
          type: integer
          format: int32
        templateId:
          type: integer
          format: int32
      additionalProperties: false
    ScreenTemplateUpdateDto:
      type: object
      properties:
        screenId:
          type: integer
          format: int32
        templateId:
          type: integer
          format: int32
      additionalProperties: false
    StoreReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    StoreReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/StoreReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    StoreCreateDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    StoreUpdateDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    ProductUpdatePriceDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        price:
          type: number
          format: double
      additionalProperties: false
    TemplateReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
          nullable: true
        createdTime:
          type: string
          format: date-time
        uilink:
          type: string
          nullable: true
        src:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
      additionalProperties: false
    TemplateReadDtoPagingResponseDto:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/TemplateReadDto'
          nullable: true
        count:
          type: integer
          format: int32
        nextPage:
          type: string
          nullable: true
        previousPage:
          type: string
          nullable: true
      additionalProperties: false
    ProductTemplateReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
        src:
          type: string
          nullable: true
        location:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductListTemplateReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        boxId:
          type: integer
          format: int32
          nullable: true
        maxSize:
          type: integer
          format: int32
          nullable: true
        location:
          type: integer
          format: int32
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductTemplateReadDto'
          nullable: true
      additionalProperties: false
    BoxDetailTemplateReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        templateId:
          type: integer
          format: int32
        boxType:
          $ref: '#/components/schemas/BoxTypeReadDto'
        location:
          type: integer
          format: int32
          nullable: true
        src:
          type: string
          nullable: true
        headerTitle:
          type: string
          nullable: true
        footerTitle:
          type: string
          nullable: true
        headerSrc:
          type: string
          nullable: true
        footerSrc:
          type: string
          nullable: true
        productLists:
          type: array
          items:
            $ref: '#/components/schemas/ProductListTemplateReadDto'
          nullable: true
      additionalProperties: false
    TemplateDetailReadDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
          nullable: true
        createdTime:
          type: string
          format: date-time
        uilink:
          type: string
          nullable: true
        src:
          type: string
          nullable: true
        boxes:
          type: array
          items:
            $ref: '#/components/schemas/BoxDetailTemplateReadDto'
          nullable: true
      additionalProperties: false
    ProductListProductTemplateUpdateDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        location:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductListUpdateWithTemplateDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        boxId:
          type: integer
          format: int32
          nullable: true
        maxSize:
          type: integer
          format: int32
          nullable: true
        location:
          type: integer
          format: int32
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductListProductTemplateUpdateDto'
          nullable: true
      additionalProperties: false
    BoxUpdateWithTemplateDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        templateId:
          type: integer
          format: int32
        boxType:
          $ref: '#/components/schemas/BoxTypeReadDto'
        location:
          type: integer
          format: int32
          nullable: true
        src:
          type: string
          nullable: true
        headerTitle:
          type: string
          nullable: true
        footerTitle:
          type: string
          nullable: true
        headerSrc:
          type: string
          nullable: true
        footerSrc:
          type: string
          nullable: true
        productLists:
          type: array
          items:
            $ref: '#/components/schemas/ProductListUpdateWithTemplateDto'
          nullable: true
      additionalProperties: false
    TemplateUpdateDto:
      type: object
      properties:
        description:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        src:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
          readOnly: true
        boxes:
          type: array
          items:
            $ref: '#/components/schemas/BoxUpdateWithTemplateDto'
          nullable: true
      additionalProperties: false
    ProductListProductCreateWithTemplateDto:
      type: object
      properties:
        productId:
          type: integer
          format: int32
          nullable: true
        location:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProductListCreateWithTemplateDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        maxSize:
          type: integer
          format: int32
          nullable: true
        location:
          type: integer
          format: int32
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductListProductCreateWithTemplateDto'
          nullable: true
      additionalProperties: false
    BoxCreateWithTemplateDto:
      type: object
      properties:
        location:
          type: integer
          format: int32
          nullable: true
        boxTypeId:
          type: integer
          format: int32
          nullable: true
        src:
          type: string
          nullable: true
        headerTitle:
          type: string
          nullable: true
        footerTitle:
          type: string
          nullable: true
        headerSrc:
          type: string
          nullable: true
        footerSrc:
          type: string
          nullable: true
        productLists:
          type: array
          items:
            $ref: '#/components/schemas/ProductListCreateWithTemplateDto'
          nullable: true
      additionalProperties: false
    TemplateCreateDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
          nullable: true
        tags:
          type: string
          nullable: true
        src:
          type: string
          nullable: true
        createdTime:
          type: string
          format: date-time
          readOnly: true
        boxes:
          type: array
          items:
            $ref: '#/components/schemas/BoxCreateWithTemplateDto'
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: Please insert JWT with Bearer into field
      name: Authorization
      in: header
security:
  - Bearer: [ ]